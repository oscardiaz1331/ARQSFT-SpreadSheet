1. A spreadsheet shall be a group of cells.
2. The cells shall be arranged in a rectangular way.
3. Each cell shall have an identification.
4. The identification shall be the coordinate within the spreadsheet.
5. A cell coordinate shall be a tuple of two components.
6. The first component shall identify the column.
7. The first component value shall be one letter or a sequence of letters.
8. The second component shall identify the row.
9. The second component value shall be a number starting in 1.
10. Each cell shall have a content.
11. The content of a cell shall be numerical, text or formulas.
12. Each content shall have a value.
13. The value of a text content shall be a string.
14. The value of a numerical content shall be a number (integer or real).
15. In the case that the string is empty, it shall return a 0.
16. If the cell is involved in the computation of a formula, the program must be designed in such a way that it gets the number represented by the string.
17. If the cell is involved in operations with strings (concatenation, for instance), then the program has to work with the string.
18. If the cell is involved in a formula, in the case that the string is not a number and it would be a number, it shall notify an error.
19. In any other case, it shall return the string.
20. In the case that the number is a number, it shall return the number itself.
21. If the string is a textual representation of the number, the program shall return the string.
22. In the case that the cell is empty, it shall return an empty string.
23. The value of a formula shall be the number resulting of computing the formula.
24. A formula shall be a mathematical relationship or rule expressed in symbols.
25. The formula shall start with the character '='.
26. Formulas shall be able to calculate the value of a cell taking into account values of the contents in other cells.
27. Formulas shall have one or more operands and operators.
28. Operands shall be numbers, cells or functions.
29. Operands shall be separated by an operator.
30. Formulas shall have an operand after the character '='.
31. Formulas shall finish with an operand.
32. Operators shall be '+', '-', '*' or '/'.
33. Formulas shall contain functions as operands.
34. The program shall be able to process the formulas.
35. The program shall be able to compute the values returned by the formulas.
36. The program shall update the values of the contents of the cells that depend of the changed cell.
37. The design shall consider that users may make errors in writing formulas.
38. The program shall be able to identify syntax errors in formulas.
39. The program shall identify circular dependencies.
40. The program shall prevent the user introducing circular dependencies raising a notification.
41. The processing shall take place after loading a spreadsheet from a file.
42. All non-empty cells shall be processed and their values recomputed if necessary.
43. The spreadsheet shall not contain any circular dependency.
44. The cells shall be uploaded to the spreadsheet.
45. The values of the cells shall be computed as they appear in the file.
46. The spreadsheet shall support the SUMA, MIN, MAX and PROMEDIO functions.
47. The SUMA function shall compute the sum of the values of the cells identified in its argument.
48. The MIN function shall return the minimum value of the values of the cells identified in its argument.
49. The MAX function shall return the maximum value of the values of the cells identified in its argument.
50. The PROMEDIO function shall return the arithmetic mean of the values of the cells identified in its argument.
51. The functions shall have one or more arguments.
52. The arguments shall be separated by the character ';'.
53. The list of arguments shall contain one or more arguments of numerical values, range of cells, individual cells or other functions.
54. A range of cells shall be a rectangular set of cells.
55. A range shall be defined by two cells identifiers.
56. The cells identifiers shall be separated by the character ':'.
57. The first cell identifier shall correspond to the cell ocupying the upper left position of the rectangle.
58. The second cell identifier shall correspond to the cell ocupying the bottom right position of the rectangle.
59. The individual cells argument shall be its coordinate.
60. An individual cell shall have the same cell in the upper left cell and bottom right cell.
61. Functions shall have as arguments the result generated by invoking functions.
62. A spreadsheet stored using the S2V format shall be a text file.
63. Each line in the file shall include the contents of one row of the spreadsheet.
64. One line of the file shall contain the sequence of textual representations of the contents of the cells in the row.
65. The textual representations shall be separated by the character ';'.
66. The spreadsheet shall be stored in a file.
67. If a formula contains a function with more than one argument, the ";" characters separating each argument shall be stored as "," in the file.
68. When reading the file for creating the spreadsheet that it represents, the "," separating arguments in a function shall be converted back into ";".
69. The program shall be able to store the contents of a spreadsheet in the S2V format.
70. The program shall be able to parse the contents of a file.
71. The file contents shall be conformant to the S2V format.
72. The program shall create the corresponding spreadsheet.
73. The program shall present a textual menu of options for interacting with the users.
74. The program shall process the option that the user selects.
75. Interactions shall occur as a sequence of questions/answers.
76. The questions shall finish when the program gets from the user all the information that it requires for processing the request.
77. The program shall inform to the user through a message in the console if the program finds any problem that prevents to completely process the request.
78. The user interface shall be designed in such a way that its replacement by a graphical user interface would require the minimum amount of work possible.
79. The program shall present to the user a set of specific options.
80. The set of specific options shall be defined during the analysis of the problem.