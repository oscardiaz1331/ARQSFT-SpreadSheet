Use case Number: 6
Use case Name: ModifyCell

Actors and their interests:
System, Users

Preconditions:
- The system has an open and active spreadsheet
- The option to modify cell has been selected
- The user has identified the specific cell to be modified

Postconditions:
- The cell, with its content and value have been modified and all the cells that depend on it have also modified their value

Main Success Scenario (Basic Flow):
1. The system retrieves the current content of the identified cell
2. The user inputs the new information to update the cell content
3. The system replaces the current content of the cell with the new information provided by the user
4. The system updates the content of the cells that depend on the modified cell
5. The system notifies the user that the cell modification was successful

Extension (Alternative Flow):
1.a There is an error retrieving the current content of the cell
	1. The system notifies the problem

3.a There is an error updating the cell content with the new information
	1. The system notifies the user

4.a There is an error updating the cell content
	1. The system notifies the user

SPECIFICATIONS:
void execute(Spreadsheet spreadsheet, S2VLoader loader, S2VStore store) throws NoNumberException, ContentException, CircularDependencyException, WrongSyntaxException, TokenWrittenIncorrectlyException
- Belongs to EditCell class and is a command pattern, responsible for editing a cell in a spreadsheet.
- Prompts the user for the coordinate and parses it into a Coordinate object. Handles IllegalArgumentException if the coordinate format is invalid. Prompts the user for new content for the cell and parses it into a Content object. Handles WrongSyntaxException if the content syntax is invalid. Attempts to edit the specified cell in the Spreadsheet instance using editCell method, passing cellCoordinate and newContent. Displays the updated spreadsheet using display() after editing the cell.