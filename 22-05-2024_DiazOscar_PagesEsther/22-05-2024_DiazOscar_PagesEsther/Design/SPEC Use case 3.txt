Use case Number: 3
Use case Name: LoadSpreadSheet

Actors and their interests:
System

Preconditions:
- The system does not contains an open spreadsheet
- The user had given the location of a text file
- The file is stored in a S2V text format
- The file only can contain a spreadsheet

Postconditions:
- The spreadsheet is opened in the project

Main Success Scenario (Basic Flow):
1. The system open the the text file in the location given by the user
2. The system reads a line and parses to a string
3. The system changes the row number
4. The system changes the column number
5. The system reads the string until the ';' character
6. The system creates a cell with the content of the string
7. The system deletes the content and the ';' of the string
8. The system returns to step 4


Extension (Alternative Flow):
1.a The text file does not exist
	1. The system notifies the user
	
2.a There is not more lines
	1. The system put the list of cells in a spreadsheet
	2. The system computes the cell values
	3. The system returns the created spreadsheet

5.a The string is empty
	1. The system selects a new line
	2. The system returns to step 2
	
6.a The content of the string is a formula
	1. The system changes the ',' character to ';'
	2. The system creates a cell with the content of the string
	3. The system returns to step 4

7.a The textual representation has a formula with more than one argument
	1. The system changes the ';' character of the formula arguments to a ',' character
	2. The system puts the textual representation in the text line

SPECIFICATIONS:
Spreadsheet loadSpreadsheet() throws ReadingSpreadSheetException;
- Belongs to S2VLoader class which implements Loader. S2VLoader class is a creator, because it has to create the spreadsheet.
- Uses the filename attribute to locate the existing file. Goes line by line extracting the cell coordinates and content and adding the cells ina  list of cells until there is not more lines. Finally, creates the spreadsheet with the list of cells.